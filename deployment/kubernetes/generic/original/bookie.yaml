#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

apiVersion: v1
kind: ConfigMap
metadata:
    name: bookie-config
data:
    BOOKIE_MEM: "\" -Xms64m -Xmx256m -XX:MaxDirectMemorySize=256m\""
    PULSAR_PREFIX_dbStorage_writeCacheMaxSizeMb: "32" # Write cache size (direct memory)
    PULSAR_PREFIX_dbStorage_readAheadCacheMaxSizeMb: "32" # Read cache size (direct memory)
    PULSAR_PREFIX_zkServers: zookeeper
    PULSAR_PREFIX_statsProviderClass: org.apache.bookkeeper.stats.prometheus.PrometheusMetricsProvider
    PULSAR_PREFIX_useHostNameAsBookieID: "true"
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
    name: bookie
    labels:
        app: pulsar
        component: bookkeeper
spec:
    selector:
      matchLabels:
        app: pulsar
        component: bookkeeper
    serviceName: bookkeeper
    replicas: 2
    template:
        metadata:
            labels:
                app: pulsar
                component: bookkeeper
                # Specify cluster to allow aggregation by cluster in
                # the metrics
                cluster: local
            annotations:
                prometheus.io/scrape: "true"
                prometheus.io/port: "8000"

        spec:
            containers:
              - name: bookie
                image: docker.io/ags039/cc911pulsar-all:2.5.2-1
                command: ["sh", "-c"]
                args:
                  - >
                    bin/apply-config-from-env.py conf/bookkeeper.conf &&
                    bin/apply-config-from-env.py conf/pulsar_env.sh &&
                    bin/pulsar bookie
                    #rm -rf /pulsar/data/bookkeeper/journal/*;
                    #rm -rf /pulsar/data/bookkeeper/ledgers/*;
                    #tail -f /dev/null
                ports:
                  - containerPort: 3181
                    name: client
                envFrom:
                  - configMapRef:
                        name: bookie-config
                env:

                volumeMounts:
                  - name: journal-disk
                    mountPath: /pulsar/data/bookkeeper/journal
                  - name: ledgers-disk
                    mountPath: /pulsar/data/bookkeeper/ledgers

                # bin/bookkeeper shell bookiesanity

            initContainers:
                # The first time, initialize BK metadata in zookeeper
                 # Otherwise ignore error if it's already there
              - name: bookie-metaformat
                image: docker.io/ags039/cc911pulsar-all:2.5.2-1
                command: ["sh", "-c"]
                args:
                  - >
                    bin/apply-config-from-env.py conf/bookkeeper.conf &&
                    bin/bookkeeper shell metaformat --nonInteractive || true;
                envFrom:
                  - configMapRef:
                        name: bookie-config

    volumeClaimTemplates:
      - metadata:
          name: journal-disk
        spec:
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: 200Gi
          storageClassName: managed-premium
      - metadata:
          name: ledgers-disk
        spec:
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: 1000Gi
          storageClassName: managed-standard

---

##
## Define the Bookie headless service
## In practice, in this case, it is only useful to have a view of
## all the bookie pods that are present
##
apiVersion: v1
kind: Service
metadata:
    name: bookkeeper
    labels:
        app: pulsar
        component: bookkeeper
spec:
    ports:
      - port: 3181
        name: server
    clusterIP: None
    selector:
        app: pulsar
        component: bookkeeper
